{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"index.html","title":"Data and Decision Sciences","text":"<p>The Data and Decision Sciences program is a Master-level specialization in Data Science, modern Artificial Intelligence and Decision Support at ISAE-SUPAERO.</p> <p>Overview presentation</p>"},{"location":"index.html#syllabus","title":"Syllabus","text":"<p>The program is composed of 240h of classes, shared between the following modules:</p> <ul> <li> <p>Foundations in Decision Making (FSD301, TC)   60 hours covering statistics, optimization, and decision theory</p> </li> <li> <p>Algorithms in Machine Learning (FSD311, AML)   80 hours on supervised, unsupervised, deep, and reinforcement learning</p> </li> <li> <p>Tools of Big Data (FSD312, OBD)   50 hours on data storage, computation, and distribution</p> </li> <li> <p>Digital economy and data usage (FSD313, ENUD)   15 hours on business models in the digital economy and on data privacy</p> </li> <li> <p>In-depth modules   15 hours in parallel modules on various data science topics</p> </li> <li> <p>Hackathon (FSD314)   3 days (20 hours) working on real-world data science competitions</p> </li> <li> <p>Seminars (FSD319)   Seminars from professional experts, training sessions, and challenges</p> </li> </ul> <p>This program is complemented by a 6 months internship in data science.</p>"},{"location":"index.html#foundations-in-decision-making-fsd301-tc","title":"Foundations in Decision Making (FSD301, TC)","text":"<p>Class website</p> <ul> <li>Statistics </li> <li>Graph Optimization</li> <li>Combinatorial Optimization</li> <li>Stochastic Optimization</li> <li>Decision Theory</li> </ul>"},{"location":"index.html#algorithms-in-machine-learning-fsd311-aml","title":"Algorithms in Machine Learning (FSD311, AML)","text":"<ul> <li>Statistical Foundations of Machine Learning </li> <li>Unsupervised and Supervised Learning Algorithms </li> <li>Deep Learning </li> <li>Reinforcement Learning</li> </ul>"},{"location":"index.html#tools-of-big-data-fsd312-obd","title":"Tools of Big Data (FSD312, OBD)","text":"<p>Class website</p> <ul> <li>Database Management Systems</li> <li>Cloud computing and virtualization</li> <li>GPGPU computing</li> <li>Distributed computing with Kubernetes and Dask</li> </ul>"},{"location":"index.html#digital-economy-and-data-use-fsd312-enud","title":"Digital Economy and Data Use (FSD312, ENUD)","text":"<p>Class website</p> <ul> <li>Business models in the digital economy</li> <li>Data security and privacy issues</li> </ul>"},{"location":"index.html#in-depth-modules","title":"In-depth Modules","text":"<p>Parallel classes shared with the Decision Systems program. The classes offered in SDD cover:</p> <ul> <li>Business Intelligence (Problem modeling, data understanding and visualization)</li> <li>Computer Vision</li> <li>Reinforcement Learning</li> </ul>"},{"location":"index.html#hackathon-fsd314","title":"Hackathon (FSD314)","text":"<p>Class website</p> <p>A 3 day hackathon with external partners on real-world challenges in Data Science.</p>"},{"location":"index.html#seminars-fsd319","title":"Seminars (FSD319)","text":"<p>Class website</p> <p>Seminars given throughout the year on data science topics by academics and professional experts, challenges like Kaggle competitions, and more.</p>"},{"location":"contact.html","title":"Contact","text":"<p>Dennis Wilson, Head of SDD, dennis.wilson@isae-supaero.fr</p> <p>Emmanuel Rachelson, Founder of SDD,  emmanuel.rachelson@isae-supaero.fr</p> <p>More information on the ISAE-SUPAERO training programs can be found on the ISAE site.</p>"},{"location":"contact.html#community","title":"Community","text":"<p>A linkedin group brings together the program's alumni, the current students and some related faculty.</p>"},{"location":"enud.html","title":"FSD312 Digital Economy and Data Usage","text":""},{"location":"enud.html#economy-numerique-et-utilisation-des-donnees-enud","title":"\u00c9conomy Numerique et Utilisation des Donn\u00e9es (ENUD)","text":"Schedule Data regulation 18/10/2022 6h M\u00e9lanie Gornet Mock trial 16/11/2022 3h M\u00e9lanie Gornet Business Intelligence 17/01/202318/01/2023 10h Lionel Rigaud"},{"location":"enud.html#data-regulation","title":"Data Regulation","text":"<p>An overview of the history of data privacy regulation and an in-depth analysis of the GDPR. </p> <p>Slides</p> <p>The evaluation for this module takes the form of a mock trial, where students will simulate real cases in data privacy. The class on the GDPR will help students prepare for case analysis and presentation.</p>"},{"location":"enud.html#business-intelligence","title":"Business Intelligence","text":"<p>Lionel Rigaud, President of Trimane, presents 10 hours of class and simulation on business intelligence and the digital economy. </p> <p>Slides</p>"},{"location":"hackathon.html","title":"SDD Hackathon","text":"<p>Since the creation of the program in 2015, one of our key classes in SDD has been the end-of-year Hackathon. Industrial and academic partners present real-world, challengening Data Science problems for the SDD students. Students work in teams and rush to an innovative solution in a 72 hours intensive sprint. </p> <p>The 2022-2023 hackathon will be held February 27 - March 1, 2023. Interested partners for the SDD hackathon should contact us.</p> <p>The Hackathon's topics are issued from partners: either research labs (public or private) or engineering teams in companies. All data and topics can be covered by confidentiality agreements (although we clearly prefer shareable data).</p> <p>Past editions:</p> <ul> <li>2021 with Airbus Defense and Space, M\u00e9t\u00e9o France, Mercator Ocean, and the CNES 4 topics: shoreline forecasting, ocean eddy detection, daily rainfall forecasting, and orbit propagation modelling.</li> <li>2020 with Airbus Defense and Space, CapGemini, Dassault Aviation, and ISAE-Supaero 5 topics: semi-supervised space imaging, sailing regatta prediction, sports analytics, image inpainting, and airplane temperature modelling.</li> <li>2019 with IRT Saint Exup\u00e9ry, Air France, Airbus, CapGemini, and Dassault Aviation Multiple topics including predictive maintenance and space imaging</li> <li>2018 with IRT Saint Exup\u00e9ry and Air France Two topics: land cover classification and predictive maintenance</li> <li>2017 with IRT Saint Exup\u00e9ry Single topic: land cover classification</li> <li>2016 with IRT Saint Exup\u00e9ry Two topics: cloud segmentation and oil detection in satellite images</li> </ul>"},{"location":"infostudents.html","title":"Information for current students","text":"<p>Most information and all course materials can be found on the course websites. This page contains general information and resources for continued education and looking for internships.</p>"},{"location":"infostudents.html#useful-links","title":"Useful links","text":"<ul> <li>Moodle (requires ISAE-SUPAERO authentication)</li> <li>Internship information (requires ISAE-SUPAERO authentication)</li> <li>The alumni Linkedin group</li> <li>The Operations Research MS</li> <li>The Applied Math MS</li> <li>ANITI</li> </ul>"},{"location":"infostudents.html#external-resources","title":"External resources","text":"<p>This resources can complement the material in SDD and cover many of the same topics</p> <ul> <li>Stanford CS229: Machine Learning</li> <li>Stanford CS230: Deep Learning</li> <li>MITx Machine Learning with Python</li> <li>David Silver's Reinforcement Learning course</li> </ul>"},{"location":"infostudents.html#mailing-lists-and-research-groups","title":"Mailing lists and research groups","text":"<p>For following news and job offers in AI</p> <p>CNRS research groups</p> <ul> <li>MADICS</li> <li>ISIS</li> <li>RO</li> <li>IA</li> </ul> <p>French organizations</p> <ul> <li>AFIA</li> <li>SFdS</li> <li>ROADEF</li> <li>SSFAM</li> <li>SIF</li> <li>SMAI</li> </ul> <p>Mailing lists</p> <ul> <li>ML-news</li> <li>RL-list</li> </ul>"},{"location":"partners.html","title":"Information for partners","text":"<p>A reason for the Data Science program's success is the richness of its community and partners: outstanding teachers, passionnate engineers, great supporting companies.</p> <p>The program is an initiative that is open to the world: societal impacts, industry and private sector stakes, new scientific or technical challenges, we believe it is by the contribution of every actor that we will build a better place for our students and for the future.</p> <p>There are a few \"classic\" ways partners can interact with us:</p> <ul> <li>Internships We take great care that our students embark on challenging, high added value internships. You have one of those? Write to us.</li> <li>The hackathon 3 intense days with our students. The final project in the program on a challenging data science task.</li> <li>Professional contracts: Part-time contract between September and March, then full-time until August.</li> <li>Dedicated events We are open to suggestions about dedicated events such as competitions, hackathons, or attending recruitment events. Write to us with suggestions.</li> <li>Seminars We have a running seminar all year long. We welcome people that come to share their passion, motivation and experience (be it technical, scientific, social...). However we strictly enforce one rule: no advertising for companies, we're interested in people and sharing, this is not the place for recruitment.</li> </ul>"},{"location":"python.html","title":"Python","text":""},{"location":"python.html#python","title":"Python","text":"<p>Le couteau suisse de Python 3</p> <ul> <li> <p>Pour Windows, une distribution anaconda pour Python 3 (le plus r\u00e9cent)  est recommand\u00e9, car il g\u00e8re automatiquement votre chemin et vos environnements Python</p> </li> <li> <p>https://www.anaconda.com/distribution/#download-section</p> </li> <li> <p>Si vous n'\u00eates pas s\u00fbr de l'environnement python que vous utilisez, veuillez lire ce qui suit avant de continuer :</p> </li> <li> <p>https://realpython.com/python-virtual-environments-a-primer/</p> </li> </ul> <p>La grande (mais non exhaustive) liste des paquets python que nous utiliserons cette ann\u00e9e \u00e0 installer en utilisant soit pip soit conda :</p> <p>numpy pandas scipy matplotlib scikit-learn jupyter keras torch geos graphviz nltk networkx statsmodels pyspark altair cython cma gym gym[atari] gym[classic_control] gym[box2d] gym[algorithms] roboschool</p> <p>Cartopy Installez \u00e9galement Cartopy, qui a d'autres d\u00e9pendances : https://scitools.org.uk/cartopy/docs/latest/installing.html#installing</p> <p>Quelques outils utiles pour jupyter notebooks :</p> <p>Replier les cellules d'un notebook (https://stackoverflow.com/questions/33159518/collapse-cell-in-jupyter-notebook) :</p> <p>$ pip install jupyter_contrib_nbextensions $ jupyter contrib nbextension install --user</p> <p>$ pip install jupyter_nbextensions_configurator $ jupyter nbextensions_configurator enable --user</p> <p>Ouvrir des notebooks en double-cliquant dessus (https://github.com/takluyver/nbopen) :</p> <p>$ pip install nbopen $ python -m nbopen.install_xdg</p> <p>Les pr\u00e9sentations bas\u00e9es sur les notebooks (https://github.com/damianavila/RISE) :</p> <p>$ pip install RISE</p> <p>Avoir des git diffs et des git merge lisibles sur les notebooks (https://github.com/jupyter/nbdime) :</p> <p>$ pip install nbdime $ nbdime config-git \u2013enable \u2013global</p> <p>Pilotes GPU pour Deep Learning</p> <p>Uniquement pour ceux qui ont un GPU d\u00e9di\u00e9 sur leur machine personnelle</p> <p>Installation de drivers CUDA : https://developer.nvidia.com/cuda-downloads</p> <p>Installation de drivers OpenCL : \u2192Si le PC a une carte graphique NVIDIA, les drivers OpenCL et CUDA sont l\u00e0 : http://www.nvidia.com/Download/index.aspx?lang=en-us \u2192Si le PC a une carte graphique AMD, les drivers OpenCL sont l\u00e0 : https://www.amd.com/en-us/solutions/professional/hpc/opencl \u2192 Si le PC a seulement un processeur Intel, les drivers OpenCL sont l\u00e0 : https://software.intel.com/en-us/articles/opencl-drivers \u2192 Sur Mac, OpenCL est d\u00e9j\u00e0 install\u00e9 : https://support.apple.com/fr-fr/HT202823</p> <p>\u2192Version GPU de Tensorflow et Pytorch:</p> <p>pip install tensorflow-gpu pytorch-gpu</p>"},{"location":"python.html#ssh","title":"SSH","text":""},{"location":"python.html#systems","title":"Systems","text":""},{"location":"python.html#git","title":"Git","text":"<p>Auto-formation Git et GitHub : commencez par visionner les vid\u00e9os (et pratiquer en m\u00eame temps) : https://www.youtube.com/playlist?list=PLjwdMgw5TTLXuY5i7RW0QqGdW0NZntqiP (jusqu'\u00e0 la vid\u00e9o 11 incluse au strict minimum) Et faites les activit\u00e9s guid\u00e9es de : https://lab.github.com/githubtraining/introduction-to-github</p> <p>Vous devez cr\u00e9er une cl\u00e9 SSH pour votre compte en suivant les instructions suivantes: https://docs.github.com/en/github/authenticating-to-github/generating-a-new-ssh-key-and-adding-it-to-the-ssh-agent</p> <p>Exercice</p> <pre><code>Cr\u00e9ez un compte GitHub si ce n'est pas d\u00e9j\u00e0 fait.\nCr\u00e9ez un fork du d\u00e9p\u00f4t https://github.com/SupaeroDataScience/etudiants-sdd-XXXXXX o\u00f9 XXXXXX est l'ann\u00e9e scolaire en cours (par exemple 201819)\nCopiez votre cl\u00e9 publique dans un fichier avec le nom pr\u00e9nom-nom-login_github.pub (faites attention que vous copiez la partie publique et non la partie priv\u00e9e)\nFaites un commit en ajoutant ce fichier\nFaites un Pull Request au d\u00e9p\u00f4t de base (https://github.com/SupaeroDataScience/etudiants-sdd-XXXXXX) pour que les modifications que vous avez faites soient int\u00e9gr\u00e9es dessus.\n</code></pre> <p>Ressources suppl\u00e9mentaires</p> <pre><code>https://www.youtube.com/playlist?list=PL0lo9MOBetEHhfG9vJzVCTiDYcbhAiEqL\nhttps://learngitbranching.js.org/\nhttps://git-scm.com/book/en/v2\nLa cheat-sheet git https://github.github.com/training-kit/downloads/github-git-cheat-sheet.pdf\n</code></pre>"},{"location":"python.html#editeur-de-texte","title":"\u00c9diteur de texte","text":"<p>Programmer n'est pas comme \u00e9crire des documents Word, il s'agit souvent de travailler avec de nombreux fichiers diff\u00e9rents, de manipuler de grandes quantit\u00e9s de texte de mani\u00e8re sp\u00e9cifique et r\u00e9p\u00e9t\u00e9e, et de suivre une syntaxe structur\u00e9e bien au-del\u00e0 du langage humain. Les \u00e9diteurs de texte aident \u00e0 accomplir toutes ces t\u00e2ches. Les plus populaires historiquement sont Vim et Emacs. Vous pouvez choisir n'importe quel \u00e9diteur de texte, mais il est recommand\u00e9 de bien apprendre comment il fonctionne.</p> <p>Vim</p> <p>$ sudo apt install vim $ vimtutor</p> <p>Pour plus d'informations : https://missing.csail.mit.edu/2020/editors/</p> <p>Emacs</p> <p>$ sudo apt install emacs</p> <p>https://www.emacswiki.org/emacs/LearningEmacs</p> <p>Atom https://atom.io/</p> <p>Visual Studio https://code.visualstudio.com/ Notez que le code VS dispose d'un mode interactif sp\u00e9cifique comme les notebooks Jupyter: https://code.visualstudio.com/docs/python/jupyter-support-py</p>"},{"location":"python.html#fsd319-seminars","title":"FSD319 Seminars","text":""},{"location":"python.html#le-paquet-logiciels-sdd","title":"Le paquet logiciels SDD","text":"<p>Votre bo\u00eete \u00e0 outils sur votre ordi perso, tout au long de l'ann\u00e9e !</p>"},{"location":"python.html#une-machine-virtuelle","title":"Une machine virtuelle ?","text":"<p>Auto-formation virtual-box : http://lms.isae.fr/course/view.php?id=1111</p>"},{"location":"python.html#distribution-gnulinux","title":"Distribution GNU/Linux","text":"<p>On vous recommande d'installer une distribution Linux Ubuntu-like (ou Debian-like) pour trouver facilement de l'aide si besoin.</p>"},{"location":"python.html#le-langage-r","title":"Le langage R","text":"<ul> <li>L'interpr\u00e9teur du langage R <pre><code>&gt; sudo apt install r-base\n</code></pre></li> <li>L'environnement de d\u00e9veloppement R-studio Desktop https://www.rstudio.com/products/rstudio/download/</li> </ul>"},{"location":"python.html#le-langage-scala","title":"Le langage Scala","text":"<ul> <li>L'interpr\u00e9teur du langage Scala et le Scala Build Tool <pre><code>&gt; echo \"deb https://dl.bintray.com/sbt/debian /\" | sudo tee -a /etc/apt/sources.list.d/sbt.list\n&gt; sudo apt-key adv --keyserver hkp://keyserver.ubuntu.com:80 --recv 2EE0EA64E40A89B84B2DF73499E82A75642AC823\n&gt; sudo apt-get update\n&gt; sudo apt-get install sbt\n</code></pre></li> </ul>"},{"location":"python.html#le-couteau-suisse-de-python-3-le-plus-recent-via-anaconda-httpswwwanacondacomdownload","title":"Le couteau suisse de Python 3 (le plus r\u00e9cent) via Anaconda (https://www.anaconda.com/download)","text":"<ul> <li>Une distribution anaconda pour Python 3 (le plus r\u00e9cent)</li> <li>En principe par d\u00e9faut vous avez d\u00e9j\u00e0 les paquets de base (numpy, pandas, scipy, matplotlib, scikit-learn) sinon vous pouvez les ajouter avec la commande \"conda install nom-du-paquet\"</li> <li>Quelques paquets conda en plus <pre><code>&gt; conda install tensorflow keras pytorch proj4 geos graphviz python-graphviz nltk networkx statsmodels pyspark\n</code></pre></li> <li>Pour ceux qui ont une carte graphique NVIDIA (\u00e0 regarder apr\u00e8s avoir fait la partie plus bas concernant votre carte graphique) <pre><code>&gt; conda install tensorflow-gpu pytorch-gpu\n</code></pre></li> <li>Et quelques paquets pour lesquels il vaut mieux utiliser pip (si possible le pip de votre distribution conda qui devrait devenir la commande pip par d\u00e9faut si vous n'avez pas fait une installation exotique) <pre><code>&gt; pip install pulp facile cartopy altair ipyleaflet cython cma vispy gym gym[atari] gym[classic_control] gym[box2d] gym[algorithms] roboschool\n</code></pre></li> </ul>"},{"location":"python.html#pilotes-gpu","title":"Pilotes GPU","text":"<p>Installation de drivers CUDA : https://developer.nvidia.com/cuda-downloads</p> <p>Installation de drivers OpenCL : - Si le PC a une carte graphique NVIDIA, les drivers OpenCL et CUDA sont l\u00e0 - Si le PC a une carte graphique AMD, les drivers OpenCL sont l\u00e0 - Si le PC a seulement un processeur Intel, les drivers OpenCL sont l\u00e0 - Sur Mac, OpenCL est d\u00e9j\u00e0 install\u00e9</p> <p>Compilateurs possibles : - gcc/g++, Clang/xCode, Visual Studio, ...</p> <p>Librairies / d\u2019interfaces pour la programmation : - Librairie pycuda en Python <pre><code>&gt; pip install pycuda\n</code></pre> - Librairie pyopencl en Python <pre><code>&gt; pip install pyopencl\n</code></pre> \u2192 Interface Boost en C++</p>"},{"location":"python.html#la-base-de-donnees-postgresql","title":"La base de donn\u00e9es PostgreSQL","text":"<pre><code>&gt; sudo apt install postgresql-11 pgadmin3\n</code></pre> <p>Il y aura s\u00fbrement d'autres choses \u00e0 installer en cours d'ann\u00e9e mais vous avez une base tr\u00e8s compl\u00e8te avec \u00e7a.</p> <p>Notez que vous avez \u00e9galement acc\u00e8s gratuitement (avec votre statut \u00e9tudiant) au solver de programmation lin\u00e9aire et programmation par contraintes IBM ILOG CPLEX. Il n'est pas n\u00e9cessaire de l'installer mais \u00e7a peut \u00eatre utile pour reproduire les BE jou\u00e9s au SI.</p> <p>Tableau software (\u00e0 installer vers mars)</p>"},{"location":"python.html#quelques-outils-utiles-pour-jupyter-notebooks","title":"Quelques outils utiles pour jupyter notebooks :","text":"<p>Replier les cellules d'un notebook :</p> <pre><code>pip install jupyter_contrib_nbextensions\njupyter contrib nbextension install --user\n\npip install jupyter_nbextensions_configurator\njupyter nbextensions_configurator enable --user\n</code></pre> <p>Ouvrir des notebooks en double-cliquant dessus :</p> <pre><code>pip install nbopen\npython -m nbopen.install_xdg\n</code></pre> <p>Avoir des git diffs et des git merge lisibles sur les notebooks :</p> <pre><code>pip install nbdime\nnbdime config-git \u2013enable \u2013global\n</code></pre>"},{"location":"seminars.html","title":"FSD319 - Seminars","text":""},{"location":"seminars.html#systems","title":"Systems","text":"<p>Class website</p> <p>An overview of linux, python, git, and ssh to be used throughout the year.</p>"},{"location":"seminars.html#seminars","title":"Seminars","text":"<p>We host seminars on a variety of topics in data science, artificial intelligence, and big data. These seminars are open to the campus but are organized as a part of SDD. External partners are encouraged to contact us to coordinate seminars.</p>"},{"location":"seminars.html#competitions","title":"Competitions","text":"<p>Throughout the year, students can participate in Kaggle, AIcrowd or other competitions, using time slots of FSD319 to work on these competitions.</p>"},{"location":"seminars.html#cafe-sdd","title":"Caf\u00e9 SDD","text":"<p>SDD coffees are times to meet informally with industry and academic experts in AI to discuss questions such as:</p> <ul> <li>What is daily life like as a data scientists?</li> <li>What motivates data scientists in their work?</li> <li>What are the big problems to work on in AI?</li> <li>How do we reconcile personal values and various aspects of data science such as personal data use?</li> <li>What steps brought the expert to their current position?</li> <li>What advice do they have for new data scientists?</li> </ul> <p>These coffees are organized primarily by the students, through coordination of the delegates and the SDD organizers.</p>"},{"location":"students.html","title":"Information for prospective students","text":"<p>The Data Science program aims at the best training level. It is both a very demanding and rewarding program and we wish to make sure that the right people make it in (in everybody's interest). Due to the large number of applications, a numerus clausus is in place.</p>"},{"location":"students.html#for-isae-supaero-grande-ecole-students","title":"For ISAE-SUPAERO Grande Ecole students","text":"<p>The selection is made partially on your grades and rankings from 1st and 2nd year of the Grande Ecole cursus. Although we know it is clearly suboptimal (especially given the wide span of topics seen during the common core courses in 1st and 2nd year), it is a fair criterion that applies to everybody.</p> <p>We will also give a specific attention to your personnal initiatives. For instance: - do you have a github account that has some interesting projects showing your autonomy and interest? - have you applied to a project with one of the program's professors or their teams (for example in SuReLI)? - did you get in touch with the academic staff early enough?</p> <p>There is no perfect CV to ensure a spot in the program, other than hard work, great results, autonomy, and motivation.</p>"},{"location":"students.html#for-other-isae-supaero-students","title":"For other ISAE-SUPAERO students","text":"<p>There is no link between the other curricula and the Data Science program so far. If you believe you should join us, get in touch with the head of the program you're enrolled in. You are encouraged to use the materials on this site to deepen your knowledge of Data Science.</p>"},{"location":"students.html#for-non-isae-supaero-students","title":"For non-ISAE-SUPAERO students","text":"<p>Some classes (especially the Algorithms in Machine Learning class) might be available as Master of Science classes for students enrolled in the Operations Research MS and the Applied Mathematics MS. Get in touch with the head of the program you're enrolled in to learn about the specific.</p>"},{"location":"students.html#for-phd-students","title":"For PhD students","text":"<p>You can register for some classes as part of your doctoral training. Get in touch with us and with your doctoral training supervisor to make sure you will get credits for taking the classes. Note also that independently of the Data Science program, sometimes the \"Ecoles Doctorales\" ask us to give specific training sessions to PhD students; this might be an alternative for you.</p>"},{"location":"students.html#continuing-and-executive-education","title":"Continuing and executive education","text":"<p>For now, the Data Science program is only open to initial training. However, some other possibilities exist: get in touch with us to discuss your specific needs.</p>"},{"location":"systems.html","title":"Systems CTF","text":"<p>This class is a five day Capture the Flag event to get to know with the basics of systems usage, specifically linux, git, ssh. There is also a large section on python, with an emphasis on data science scripting practices using numpy and pandas in jupyter notebooks.</p> <p>This is a self-guided exercise with resources and questions on this site. You, the participant, must look for the answer to the questions through reading documentation, discussing with others, and trying things. Try to avoid searching for answers online in a search engine; the answers can almost always be found in documentation.</p> <p>Answers can be submitted through an API with the CTF server. Questions  will be made available over the course of 5 sessions. Responding correctly to a question gives 1 point, and an additional 0.5 points are awarded for being the first to submit the correct answer to a question. That half point is the flag - be the first to capture it!</p> <p>If you're speeding through the questions, consider helping others learn the material. Depending on your background, you may have varied experience with these tools. Get to know the other participants by helping them capture a flag too.</p>"},{"location":"systems.html#2023-schedule","title":"2023 Schedule","text":"<p>Date | Topic | Questions | --- | --- | --- | 06/09 | Linux, bash | 1 - 30 08/09 | Git, ssh | 31 - 90 11/09 | Python | 90 - 160 12/09 | Numpy, pandas | 161 - 200 13/09 | Wrap up | all questions</p>"},{"location":"systems.html#linux","title":"Linux","text":"<p>Linux is an open-source operating system based on Unix. It is a standard choice for development and is the most dominant operating system for web servers, cloud computing, and high performance computing at 80% of global public servers. There are many different distributions but they share a common set of tools, notably GNU software. A very common Linux distribution is Android, at 73% of all mobile devices, so you might be a Linux user already without realizing it!</p> <p>You most likely don't use Linux as the operating system of your personal computer, however. If you are using one the 2.5 % of personal computers with Linux, you can skip straight to the Submission section</p> <p>MacOS is also based on Unix, so if you're using MacOS, most things should work just as in Linux! A few commands will be different from the course instructions, and the questions will always refer to Linux resources, for example documentation. It is highly recommended to install homebrew (https://brew.sh/) which will allow for package installation via the command line.</p>"},{"location":"systems.html#installation-on-windows","title":"Installation on Windows","text":"<p>The easiest way to use Linux on Windows is through the Windows Subsystem for Linux. Installation instructions are here: https://docs.microsoft.com/en-us/windows/wsl/install. Make sure to follow all instructions carefully. If asked to join a \"Windows Insiders Program\", ignore this. By default, this installs Ubuntu, which is good for this systems class and for all of SDD.</p> <p>The WSL is similar to a virtual machine inside of Windows, but it integrates with some existing components of Windows. You can access your Windows files from Linux at <code>/mnt/</code>, but you should make sure you're familiar with Linux first.</p> <ul> <li>About the WSL</li> <li>WSL FAQ</li> <li>How to Access WSL Linux Files from Windows</li> </ul>"},{"location":"systems.html#submission","title":"Submission","text":"<p>The CTF server's IP address is <code>34.159.187.208</code>. You can see a leaderboard there and it is the address for submitting answers. The first way we'll look at submitting answers is with <code>curl</code> in Linux.</p> <p>Once you have a Unix-type environment, either native Linux or macOS, or through the WSL, you're ready to submit to the CTF. You will use the <code>curl</code> command; you can verify that you have <code>curl</code> by running <code>which curl</code> in the command line. <code>curl</code> is a tool for transferring data from or to a server. How do you know that? By checking the documentation of <code>curl</code> using <code>man curl</code>. Try it out!</p> <p>To respond to a question, send a POST request with the data of the question <code>number</code> and <code>answer</code>, and your username as <code>user</code> (your username should be your ISAE login, but you can also check on the leaderboard). For example, the first question asks where the <code>curl</code> executable is (hint: use <code>which</code>). Then use <code>curl</code>:</p> <pre><code>curl -X POST 'http://34.159.187.208/' \\\n-d 'number=1' \\\n-d 'answer=your answer here' \\\n-d 'user=your username here'\n</code></pre> <p>Some of the questions will require access to some files, called <code>file_a.txt</code>, <code>file_b.txt</code>, and <code>file_c.txt</code>. Here are three different ways to download using <code>curl</code> and <code>wget</code>:</p> <pre><code>curl http://34.159.187.208/files/file_a.txt -o file_a.txt\ncurl http://34.159.187.208/files/file_b.txt &gt; file_b.txt\nwget http://34.159.187.208/files/file_c.txt\n</code></pre> <p>Be sure to download all three files, using whichever method. You are ready to start answering questions! If you don't know an answer, check the resources below and read documentation using <code>man</code>.</p> <p>You can see which questions you have answered by sending a GET request:</p> <pre><code>curl 'http://34.159.187.208/user/d.wilson'\n</code></pre> <p>You can also see which questions have remaining flags, the bonus points associated with answering the question for the first time, with a GET request:</p> <pre><code>curl 'http://34.159.187.208/answers/'\n</code></pre>"},{"location":"systems.html#python-submission","title":"Python Submission","text":"<p>Note that you can use the <code>requests</code> library to submit responses:</p> <pre><code>import requests\ndata = {\"number\": \"1\",\n        \"answer\": \"\",\n        \"user\": \"d.wilson\"}\nr = requests.post(\"http://34.159.187.208/\", data=data)\n</code></pre>"},{"location":"systems.html#bash-resources","title":"Bash Resources","text":"<ul> <li>ISAE class on CLI, Linux, and Bash</li> <li>Shell class from MIT</li> <li>Bash exercises</li> <li>More bash exercises</li> <li>Short exercises in regular expressions</li> </ul>"},{"location":"systems.html#git","title":"Git","text":"<p>Git is a version control system used worldwide for maintaining code, documents, video games, and much more. It has seen wide adoption with servers like Github and Gitlab while being an open-source tool that anyone can install as a client or server. In this class, we will look at repositories hosted on Github, but git is much larger than that and many organizations like ISAE have their own private git server.</p>"},{"location":"systems.html#installation","title":"Installation","text":"<p>If you're using Ubuntu, chances are you already have <code>git</code>. If not, simply do:</p> <p><code>sudo apt install git</code></p> <p>These questions concern two repositories: the Machine Learning class in SDD (https://github.com/SupaeroDataScience/machine-learning) and the Seaborn library, a popular graphing library (https://github.com/mwaskom/seaborn). You will need to download both repositories. First choose a directory to host them in, for example <code>~/SDD/FSD319</code>:</p> <pre><code>mkdir -p ~/SDD/FSD319\ncd ~/SDD/FSD319\n</code></pre> <p>and then download them using git clone:</p> <pre><code>git clone https://github.com/SupaeroDataScience/machine-learning.git\ngit clone https://github.com/mwaskom/seaborn.git\n</code></pre> <p>The commit for all questions on the <code>seaborn</code> repository is <code>1e6739</code> :</p> <pre><code>git checkout 1e6739\n</code></pre>"},{"location":"systems.html#git-resources","title":"Git Resources","text":"<ul> <li>Git course</li> <li>Introduction to github</li> <li>Github video course</li> <li>Learn git branching</li> <li>Git SCM book</li> <li>Git cheat sheet</li> </ul>"},{"location":"systems.html#git-exercise","title":"Git Exercise","text":"<p>In order to access the server for the next parts of the CTF, you will need to provide your public ssh key. The SSH section has references explaining public-key cryptography, but in general you will make a key pair with a private side and public side. You will give the public side to services like this class or Github to perform secure communication, keeping your private key secret to prove that it is you. </p> <p>First, start by making a key pair and uploading your public key to Github. This will allow you use to SSH to make push requests, instead of using a personal access token. Create an SSH key and add it to your Github account.</p> <p>Then, we will use git as a way for you to transfer your public key to the class. We could use another means, like a USB key, email, or a very large QR code, but for this exercise we will use git. First make a fork of the https://github.com/SupaeroDataScience/ctf2023 repository. Then, make a pull request with your key as a file in <code>keys/</code>. Please name your key with your name, like the example <code>keys/dennis-wilson.pub</code>. Be sure to upload only your public key. Do not ever upload your private key to public servers.</p> <p>Once your key is in the repository, you are ready for the SSH and Python portions of the CTF.</p>"},{"location":"systems.html#ssh","title":"SSH","text":"<p>For the ssh section, you will connect to the CTF server to answer questions about the remote environment. Your public key must be uploaded to the git repository above to get access to the server. You will use the corresponding private key to access the server. Your user on the server is <code>ctf</code> and the IP is the same as the CTF webserver: <code>34.159.187.208</code>.</p> <p>Please note that ISAE-EDU and ethernet block ssh to most servers, including this one and <code>github.com</code>. In order to ssh to the server, you will need to either use the eduroam network or a different network like a mobile hotspot.</p>"},{"location":"systems.html#ssh-resources","title":"SSH Resources","text":"<ul> <li>Ubuntu ssh manual</li> <li>Guide in French</li> <li>Cryptographie Asym\u00e9trique</li> <li>How SSH works</li> </ul>"},{"location":"systems.html#linux-tools","title":"Linux tools","text":"<p>Now that you're an expert in Linux, let's quickly look at some useful tools. You may need to install some of these, either using <code>apt</code>, <code>brew</code>, <code>yum</code>, <code>pacman</code>, or whichever package manager you use. Linux comes with many programs installed by default, especially distributions like Ubuntu, however the tools in this section will be more useful than the base Linux tools. We'll cover four: <code>apt</code> for package management, <code>top</code> for system monitoring, <code>tmux</code> for terminal management, and <code>vim</code> for file editing. There are alternatives to all of these programs that are great, but it is worth being familiar with these four.</p>"},{"location":"systems.html#linux-resources","title":"Linux Resources","text":"<ul> <li>apt manual</li> <li>Alternatives to top</li> <li>Guide to tmux</li> <li>tmux cheat sheet</li> <li>Editors from MIT class</li> <li>Vim adventures</li> <li>tldr, short man pages</li> </ul>"},{"location":"systems.html#python","title":"Python","text":"<p>An overview and reminder of the python programming language, with a focus on numpy and pandas manipulation using Jupyter.</p>"},{"location":"systems.html#installation_1","title":"Installation","text":"<p>You most likely have python installed on your Linux system, but it is worthwhile to make sure and to upgrade. Python 3.8, 3.9, or 3.10 are all supported.</p> <pre><code>sudo apt install python3\n</code></pre> <p>It is highly recommended to make a <code>virtual environment</code> to manage your python packages. There are three main libraries for virtual environments: </p> <ul> <li>Virtualenv</li> <li>Pipenv</li> <li>Conda</li> </ul> <p><code>Virtualenv</code> is recommended for new users on Linux. Conda, or the platform Anaconda, can be useful on Windows as many packages are built specifically for windows, but not all packages are available via conda. <code>Pipenv</code> is an exciting project aimed at Python developers, but it adds additional complexity.</p> <p>Once you have a virtual environment created, please install the following packages for the rest of the Seminars class:</p> <pre><code>numpy\npandas\nscipy\nmatplotlib\njupyter\n</code></pre> <p>The following packages will also be used in SDD:</p> <pre><code>seaborn\nscikit-learn\nkeras\ntorch\ngeos\ngraphviz\nnltk\nnetworkx\nstatsmodels\npyspark\ncython\ncma\ngym\n</code></pre>"},{"location":"systems.html#jupyter","title":"Jupyter","text":"<p>Jupyter (stands for the three original languages in the project: Julia, Python, and R) is a way to use and develop code interactively in the browser. Once you've installed the jupyter package, you can run a Jupyter notebook by simply running <code>jupyter notebook</code>.</p> <p>For Windows users, you can run Jupyter in the WSL. As explained in this blog post, you simply need to execute <code>jupyter notebook --no-browser</code> on the WSL and then copy and paste the URL and token generated into a Windows browser.</p> <p>Some additional packages for improving Jupyter are <code>nbopen nbdime RISE</code>. Be sure to read their documentation before installing to verify if these are relevant to you.</p>"},{"location":"systems.html#python-resources","title":"Python Resources","text":"<ul> <li>Python 3.10 Documentation</li> <li>Pip documentation</li> <li>Pandas cheatsheet</li> <li>Stanford Python and Numpy tutorial</li> <li>Python seminar</li> <li>Google Colab: Jupyter notebooks on the cloud</li> <li>Binder: Also Jupyter notebooks on the cloud, not hosted by Google</li> </ul>"},{"location":"systems.html#questions","title":"Questions","text":""}]}